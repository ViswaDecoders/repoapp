{"version":3,"sources":["config/colors.js","components/Pagination.js","config/styles.js","components/AppText.js","components/Cards.js","components/Screen.js","components/list/ListItemSeperator.js","components/Heading.js","screens/ListingScreen.js","App.js","webpack:///./App.css?4d84","App.css"],"names":["primary","secondary","black","white","grey","lightgrey","darkgray","danger","red","placeholdercol","lightblue","darkpink","lightbrown","green","orange","styles","StyleSheet","create","container","alignItems","alignSelf","flexDirection","numberContainer","leftnright","borderWidth","borderColor","colors","padding","maxWidth","margin","color","fontWeight","element","Pagination","cardsPerPage","totalCards","paginate","useState","currentPage","setCurrentPage","pageNumber","i","Math","ceil","push","View","style","TouchableHighlight","onPress","console","log","includes","Text","FlatList","contentContainerStyle","data","renderItem","item","text","fontSize","fontFamily","Platform","OS","AppText","children","otherProps","defaultStyles","card","borderRadius","backgroundColor","detailedContainer","subTitle","title","marginBottom","Cards","name","desc","owner","stars","forks","lang","underlayColor","numberOfLines","screen","paddingTop","Constants","statusBarHeight","flex","view","Screen","SafeAreaView","seperator","width","height","ListItemSeperator","props","newCards","head","fontStyle","textDecorationLine","Headings","justifyContent","ListingScreen","cardsLen","isLoading","setLoading","setData","searchTerm","setSearchTerm","items","length","error","useEffect","fetch","then","response","json","catch","finally","currentCards","indexOfLastCard","indexOfFirstCard","slice","ActivityIndicator","Heading","className","type","placeholder","onChange","event","target","value","filter","val","toLowerCase","language","keyExtractor","datum","id","toString","description","login","stargazers_count","forks_count","Linking","openURL","html_url","ItemSeparatorComponent","ListItemSeperatorComponent","App","api","content","__esModule","default","module","options","exports","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.8f5c88a4.chunk.js","sourcesContent":["export default {\r\n  primary: \"#fc5c65\",\r\n  secondary: \"#4ecdc4\",\r\n  black: \"#000\",\r\n  white: \"#fff\",\r\n  grey: \"#6e6969\",\r\n  lightgrey: \"#f8f4f4\",\r\n  darkgray: \"#0c0c0c\",\r\n  danger: \"#ff5252\",\r\n  red: \"red\",\r\n  placeholdercol: \"#C7C7CD\",\r\n  lightblue: \"#ccccff\",\r\n  darkpink: \"#ff1a66\",\r\n  lightbrown: \"#fff2e6\",\r\n  green: \"#47d147\",\r\n  orange: \"#ff8000\",\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  FlatList,\r\n  Text,\r\n  Linking,\r\n  TouchableHighlight,\r\n} from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction Pagination({ cardsPerPage, totalCards, paginate }) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageNumber = [];\r\n\r\n  for (let i = 1; i <= Math.ceil(totalCards / cardsPerPage); i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  // console.log(pageNumber);\r\n  const prevPage = () => {\r\n    console.log(\"prev\");\r\n    if (pageNumber.includes(currentPage - 1)) {\r\n      setCurrentPage(currentPage - 1);\r\n      paginate(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  const nextPage = () => {\r\n    console.log(\"next\");\r\n    if (pageNumber.includes(currentPage + 1)) {\r\n      setCurrentPage(currentPage + 1);\r\n      paginate(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableHighlight onPress={prevPage}>\r\n        <Text style={styles.leftnright}>Prev</Text>\r\n      </TouchableHighlight>\r\n      <FlatList\r\n        contentContainerStyle={styles.numberContainer}\r\n        data={pageNumber}\r\n        renderItem={({ item }) => (\r\n          <TouchableHighlight\r\n            onPress={() => {\r\n              setCurrentPage(item);\r\n              paginate(item);\r\n            }}\r\n          >\r\n            <View style={styles.element}>{item}</View>\r\n          </TouchableHighlight>\r\n        )}\r\n      />\r\n      <TouchableHighlight onPress={nextPage}>\r\n        <Text style={styles.leftnright}>Next</Text>\r\n      </TouchableHighlight>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    alignSelf: \"center\",\r\n    flexDirection: \"row\",\r\n  },\r\n  numberContainer: {\r\n    flexDirection: \"row\",\r\n  },\r\n  leftnright: {\r\n    borderWidth: 1,\r\n    borderColor: colors.black,\r\n    padding: 5,\r\n    maxWidth: 44,\r\n    margin: 5,\r\n    color: colors.green,\r\n    fontWeight: \"bold\",\r\n  },\r\n  element: {\r\n    borderWidth: 1,\r\n    borderColor: colors.black,\r\n    padding: 5,\r\n    maxWidth: 22,\r\n    margin: 5,\r\n    color: colors.green,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default Pagination;\r\n","import { Platform } from \"react-native\";\r\nimport colors from \"./colors\";\r\n\r\nexport default {\r\n  colors,\r\n  text: {\r\n    fontSize: 18,\r\n    color: colors.darkgray,\r\n    fontFamily: Platform.OS === \"android\" ? \"Roboto\" : \"Avenir\",\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { Text } from \"react-native\";\r\nimport defaultStyles from \"../config/styles\";\r\n\r\nfunction AppText({ children, style, ...otherProps }) {\r\n  return (\r\n    <Text style={[defaultStyles.text, style]} {...otherProps}>\r\n      {children}\r\n    </Text>\r\n  );\r\n}\r\n\r\nexport default AppText;\r\n","import React from \"react\";\r\nimport { View, StyleSheet, TouchableHighlight } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\nimport AppText from \"./AppText\";\r\n\r\nfunction Cards({ name, desc, owner, stars, forks, lang, onPress }) {\r\n  return (\r\n    <TouchableHighlight underlayColor={colors.lightgrey} onPress={onPress}>\r\n      <View style={styles.card}>\r\n        <View style={styles.detailedContainer}>\r\n          <AppText style={styles.title} numberOfLines={1}>\r\n            <AppText>Repo name: </AppText>\r\n            {name}\r\n          </AppText>\r\n          <AppText style={styles.subTitle} numberOfLines={2}>\r\n            <AppText>Description: </AppText> {desc}\r\n          </AppText>\r\n          <AppText style={styles.subTitle} numberOfLines={1}>\r\n            <AppText>Owner name: </AppText> {owner}\r\n          </AppText>\r\n          <AppText style={styles.subTitle} numberOfLines={1}>\r\n            <AppText>Stars count: </AppText>\r\n            {stars}\r\n          </AppText>\r\n          <AppText style={styles.subTitle} numberOfLines={1}>\r\n            <AppText>Number of forks: </AppText>\r\n            {forks}\r\n          </AppText>\r\n          <AppText style={styles.subTitle} numberOfLines={1}>\r\n            <AppText>Language: </AppText>\r\n            {lang}\r\n          </AppText>\r\n        </View>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    borderRadius: 15,\r\n    backgroundColor: colors.white,\r\n    margin: 15,\r\n  },\r\n  detailedContainer: {\r\n    padding: 20,\r\n  },\r\n  subTitle: {\r\n    color: colors.secondary,\r\n  },\r\n  title: {\r\n    borderRadius: 5,\r\n    padding: 5,\r\n    marginBottom: 10,\r\n    backgroundColor: colors.lightblue,\r\n    fontWeight: \"bold\",\r\n    color: colors.darkpink,\r\n  },\r\n});\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { StyleSheet, SafeAreaView, View } from \"react-native\";\r\nimport Constants from \"expo-constants\";\r\n\r\nfunction Screen({ children, style }) {\r\n  return (\r\n    <SafeAreaView style={[styles.screen, style]}>\r\n      <View style={[styles.view, style]}>{children}</View>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    paddingTop: Constants.statusBarHeight,\r\n    flex: 1,\r\n  },\r\n  view: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default Screen;\r\n","import React from \"react\";\r\nimport { View, Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../../config/colors\";\r\n\r\nfunction ListItemSeperator(props) {\r\n  return <View style={styles.seperator} />;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  seperator: {\r\n    width: \"100%\",\r\n    height: 1,\r\n    backgroundColor: colors.lightgrey,\r\n  },\r\n});\r\n\r\nexport default ListItemSeperator;\r\n","import React from \"react\";\r\nimport { Text, StyleSheet } from \"react-native\";\r\nimport colors from \"../config/colors\";\r\n\r\nfunction Headings({ children, style }) {\r\n  return <Text style={[styles.head, style]}>{children}</Text>;\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  head: {\r\n    fontSize: 35,\r\n    fontWeight: \"bold\",\r\n    fontStyle: \"normal\",\r\n    alignSelf: \"center\",\r\n    color: colors.orange,\r\n    textDecorationLine: \"Underline\",\r\n  },\r\n});\r\n\r\nexport default Headings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  FlatList,\r\n  ActivityIndicator,\r\n  Linking,\r\n} from \"react-native\";\r\nimport Card from \"../components/Cards\";\r\nimport \"../App.css\";\r\nimport Screen from \"../components/Screen\";\r\nimport ListItemSeperatorComponent from \"../components/list/ListItemSeperator\";\r\nimport colors from \"../config/colors\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport Headings from \"../components/Heading\";\r\n\r\nlet newCards;\r\n\r\nfunction ListingScreen(props) {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardsPerPage] = useState(10);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  // console.log(data.items);\r\n\r\n  let cardsLen;\r\n  //Note: to use splice/length need to be specified in try catch or any type of validation to work\r\n  try {\r\n    cardsLen = data.items.length;\r\n    // console.log(data.items.splice(1, 5));\r\n  } catch (error) {}\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      \"https://api.github.com/search/repositories?q=language:Javascript&sort=stars&order=desc\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((json) => setData(json))\r\n      .catch((error) => console.error(error))\r\n      .finally(() => setLoading(false));\r\n  }, []);\r\n\r\n  //Getting posts\r\n  const indexOfLastCard = currentPage * cardsPerPage;\r\n  const indexOfFirstCard = indexOfLastCard - cardsPerPage;\r\n  let currentCards;\r\n  console.log(newCards);\r\n  if (newCards) currentCards = newCards;\r\n  else {\r\n    try {\r\n      currentCards = data.items.slice(indexOfFirstCard, indexOfLastCard);\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  }\r\n\r\n  //change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <>\r\n      <Screen style={styles.screen}>\r\n        {isLoading ? (\r\n          <View style={styles.container}>\r\n            <ActivityIndicator />\r\n            <Text style={styles.text}>Loading...</Text>\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <Headings>REPOS</Headings>\r\n            <div className=\"TextInput\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search based on name...\"\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                  newCards = data.items.filter((val) => {\r\n                    if (searchTerm == \"\") return val;\r\n                    else if (\r\n                      val.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n                    )\r\n                      return val;\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"TextInput\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search based on language...\"\r\n                onChange={(event) => {\r\n                  setSearchTerm(event.target.value);\r\n                  newCards = data.items.filter((val) => {\r\n                    if (searchTerm == \"\") return val;\r\n                    else if (\r\n                      val.language\r\n                        .toLowerCase()\r\n                        .includes(searchTerm.toLowerCase())\r\n                    )\r\n                      return val;\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <View\r\n              style={{\r\n                flex: 1,\r\n                flexDirection: \"column\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <FlatList\r\n                data={currentCards}\r\n                keyExtractor={(datum) => datum.id.toString()}\r\n                renderItem={({ item }) => (\r\n                  <Card\r\n                    name={item.name}\r\n                    desc={item.description}\r\n                    owner={item.owner.login}\r\n                    stars={item.stargazers_count}\r\n                    forks={item.forks_count}\r\n                    lang={item.language}\r\n                    onPress={() => Linking.openURL(item.html_url)}\r\n                  />\r\n                )}\r\n                ItemSeparatorComponent={ListItemSeperatorComponent}\r\n              />\r\n              <View style={{ alignSelf: \"center\", padding: 10 }}>\r\n                Page Size: {cardsPerPage}\r\n              </View>\r\n              <Pagination\r\n                cardsPerPage={cardsPerPage}\r\n                totalCards={cardsLen}\r\n                paginate={paginate}\r\n              />\r\n            </View>\r\n          </>\r\n        )}\r\n      </Screen>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  screen: {\r\n    backgroundColor: colors.lightgrey,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  text: {\r\n    color: \"dodgerblue\",\r\n    fontSize: 30,\r\n  },\r\n});\r\n\r\nexport default ListingScreen;\r\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport Pagination from \"./components/Pagination\";\nimport ListingScreen from \"./screens/ListingScreen\";\n\nexport default function App() {\n  return <ListingScreen />;\n}\n\n// class App extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       data: null,\n//       isLoading: true,\n//     };\n//   }\n\n//   componentDidMount() {\n//     //GET\n//     return fetch(\n//       \"https://api.github.com/search/repositories?q=language:Javascript&sort=stars&order=desc\"\n//     )\n//       .then((res) => res.json())\n//       .then((json) => {\n//         this.setState({\n//           data: json.items,\n//           isLoading: false,\n//         });\n//       })\n//       .catch((error) => {\n//         console.log(error);\n//       });\n\n//     //POST\n//     // fetch(\n//     //   \"https://api.github.com/search/repositories?q=language:Javascript&sort=stars&order=desc\",\n//     //   {\n//     //     method: \"POST\",\n//     //     header: {\n//     //       Accept: \"application/json\",\n//     //       \"Content-Type\": \"application/json\",\n//     //     },\n//     //     body: JSON.stringify({\n//     //       firstparam: \"value\",\n//     //       secondparam: \"value\",\n//     //     }),\n//     //   }\n//     // );\n//   }\n//   render() {\n//     const { isLoading, data } = this.state;\n//     if (isLoading) {\n//       return (\n//         <View style={styles.container}>\n//           <ActivityIndicator />\n//           <Text style={styles.text}> Pleses wait some time.... </Text>\n//         </View>\n//       );\n//     } else {\n//       let names = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.name}</Text>\n//           </View>\n//         );\n//       });\n//       let desps = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.description}</Text>\n//           </View>\n//         );\n//       });\n//       let owners = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.owner.login}</Text>\n//           </View>\n//         );\n//       });\n//       let stars = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.stargazers_count}</Text>\n//           </View>\n//         );\n//       });\n//       let forks = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.forks_count}</Text>\n//           </View>\n//         );\n//       });\n//       let languages = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.language}</Text>\n//           </View>\n//         );\n//       });\n//       let urls = data.map((val) => {\n//         return (\n//           <View key={val.id}>\n//             <Text>{val.html_url}</Text>\n//           </View>\n//         );\n//       });\n\n//       return <View style={styles.container}>{urls}</View>;\n//     }\n//   }\n// }\n\n// export default App;\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//   },\n//   text: {\n//     color: \"dodgerblue\",\n//     fontSize: 30,\n//   },\n//   item: {\n//     flex: 1,\n//     margin: 4,\n//     alignItems: \"center\",\n//     justifyContent: \"center\",\n//     borderBottomWidth: 1,\n//     borderBottomColor: \"#eee\",\n//   },\n// });\n","var api = require(\"!C:\\\\Users\\\\NEERU\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\NEERU\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\NEERU\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".TextInput{\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n    font-family: Arial, Helvetica, sans-serif;\\r\\n}\\r\\n\\r\\n\\r\\n.TextInput input{\\r\\n    margin-top: 20px;\\r\\n    width: 300px;\\r\\n    height: 40px;\\r\\n    font-size: 20px;\\r\\n    padding-left: 10px;\\r\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}